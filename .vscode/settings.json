{

  // === BUILT-IN SETTINGS ===

  // Disable all types of auto-fixes. This setting effectively disables both
  // EditorConfig and ESLint when saving files in this repository. This is
  // REQUIRED so that we can leave invalid code formatting in the `try` files.
  // https://code.visualstudio.com/Docs/languages/javascript#_code-actions-on-save
  "editor.codeActionsOnSave": {
    "source.fixAll": false
  },

  // Render vertical guidelines at 80, 100 120 columns. Code lines SHOULD be
  // less than 80 characters long and MUST be less than 100 characters. Comment
  // lines MAY be a little longer, up to 120 characters.
  "editor.rulers": [
    80,
    100,
    120
  ],

  // DO NOT have VS Code automatically detect indentation, but force
	// tabs to always be transformed to two spaces.
  "editor.detectIndentation": false,
  "editor.insertSpaces": true,
  "editor.tabSize": 2,


  // Overrides for JavaScript files.
  "[javascript]": {
    // Use the ESLint extension as the default JavaScript formatter…
    "editor.defaultFormatter": "dbaeumer.vscode-eslint",

    // … but disable all automatic formatting. This also has the effect of
		// disabling Prettier, if that extension is installed in VS Code.
    "editor.formatOnPaste": false,
    "editor.formatOnSave": false,
    "editor.formatOnType": false,
  },

  // Overrides for TypeScript files.
  "[typescript]": {
    // Use the ESLint extension as the default TypeScript formatter…
    "editor.defaultFormatter": "dbaeumer.vscode-eslint",

    // … but disable all automatic formatting in this repository.
    "editor.formatOnPaste": false,
    "editor.formatOnSave": false,
    "editor.formatOnType": false,
  },

  // === EXTENSION SETTINGS ===

  // Settings for the ESLint extension.
  // https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint

  // Enable support for the new flat file configuration format,
  // `eslint.config.js`, available since ESLint v8.21.
  "eslint.experimental.useFlatConfig": true,

  // Enable ESLint as a code formatter.
  "eslint.format.enable": true,

  // Use ESLint to validate both JS and TS source files.
  "eslint.validate": ["javascript", "typescript"],

}
